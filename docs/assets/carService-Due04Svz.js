const i="pf_user_cars";async function e(r){if(!r)return[];try{const t=typeof window<"u"&&window.__API_BASE||(typeof window<"u"&&(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1")?`${window.location.protocol}//${window.location.hostname}:3001`:""),o=await fetch(`${t}/api/users/${encodeURIComponent(r)}/cars`);if(o.ok)return await o.json()}catch(t){console.warn("API getCars failed, falling back to localStorage:",t)}try{return JSON.parse(localStorage.getItem(i)||"{}")[r]||[]}catch(t){return console.error("Erro ao carregar carros:",t),[]}}async function c(r,t){if(!r)return!1;try{const o=typeof window<"u"&&window.__API_BASE||(typeof window<"u"&&(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1")?`${window.location.protocol}//${window.location.hostname}:3001`:"");if((await fetch(`${o}/api/users/${encodeURIComponent(r)}/cars`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({cars:t})})).ok)return!0}catch(o){console.warn("API saveCars failed, falling back to localStorage:",o)}try{const o=JSON.parse(localStorage.getItem(i)||"{}");return o[r]=t,localStorage.setItem(i,JSON.stringify(o)),!0}catch(o){return console.error("Erro ao salvar carros:",o),!1}}async function l(r,t){if(!r||!t)return null;try{const o=await e(r),a={id:Date.now().toString()+Math.random().toString(36).substr(2,9),...t,createdAt:new Date().toISOString()};return o.push(a),await c(r,o),a}catch(o){return console.error("Erro ao adicionar carro:",o),null}}async function w(r,t){if(!r||!t)return!1;try{const o=typeof window<"u"&&window.__API_BASE||(typeof window<"u"&&(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1")?`${window.location.protocol}//${window.location.hostname}:3001`:"");if((await fetch(`${o}/api/users/${encodeURIComponent(r)}/cars/${encodeURIComponent(t)}`,{method:"DELETE"})).ok)return!0}catch(o){console.warn("API removeCar failed, falling back to localStorage:",o)}try{const a=(await e(r)).filter(n=>n.id!==t);return await c(r,a),!0}catch(o){return console.error("Erro ao remover carro:",o),!1}}async function f(r,t,o){if(!r||!t||!o)return!1;try{const n=(await e(r)).map(s=>s.id===t?{...s,...o,updatedAt:new Date().toISOString()}:s);return await c(r,n),!0}catch(a){return console.error("Erro ao atualizar carro:",a),!1}}async function d(r,t){if(!r||!t)return!1;try{const a=(await e(r)).map(n=>({...n,isDefault:n.id===t}));return await c(r,a),!0}catch(o){return console.error("Erro ao definir carro padr√£o:",o),!1}}export{l as a,e as g,w as r,d as s,f as u};
